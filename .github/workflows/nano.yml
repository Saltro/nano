# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Nano-frontend CI

on:
  push:
    tags: [v*]
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build --if-present
      - name: Build the Docker image and Push
        run: |
          docker login ccr.ccs.tencentyun.com --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
          docker build -t nano_frontend:latest .
          docker tag nano_frontend ccr.ccs.tencentyun.com/nano_frontend/nano_frontend:latest
          docker push ccr.ccs.tencentyun.com/nano_frontend/nano_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Deploy docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ~
            docker login --username=${{ secrets.DOCKER_USERNAME }} ccr.ccs.tencentyun.com --password=${{ secrets.DOCKER_PASSWORD }}
            docker stop nano_frontend
            docker rm nano_frontend
            docker rmi ccr.ccs.tencentyun.com/nano_frontend/nano_frontend:latest
            docker pull ccr.ccs.tencentyun.com/nano_frontend/nano_frontend:latest
            docker run -d --name nano_frontend -p ${{ secrets.EXPOSE_PORT  }}:80 ccr.ccs.tencentyun.com/nano_frontend/nano_frontend:latest
